apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions' //kotlin中省去findviewbyid的过程插件

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.itheima.smp"
        minSdkVersion 19
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName :project.getName()]
            }
        }

        ndk {
            /* 同Application.mk文件一样,需要配置make变量,APP_ABI := armeabi armeabi-v7a (强制指明应用程序基于哪些指令集进行编译) */
            /* 否则会报错"XXX/src/main/obj/local/arm64-v8a/libavformat-56.so: error adding symbols: File in wrong format" */
            abiFilters "armeabi","armeabi-v7a"
        }
    }

    /* 同时依赖rxjava1 & rxjava2的依赖,也包含不同版本的适配器,导致有多个rxjava.properties文件 */
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    /* 方式1:可以使用原始的ndk-build方式编译,依赖于Android.mk脚本配置项 */
    externalNativeBuild {
        ndkBuild {
            path file('src/main/jni/Android.mk')
        }
    }

    /* 方式2:可以使用CMake方式编译 */
    //externalNativeBuild {
    //    cmake {
    //        path "CMakeLists.txt"
    //    }
    //}

    testOptions {
        unitTests.returnDefaultValues = true
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

/**
 * 有关gradle导入aar包的步骤
 * {1} SildeMenulibrary-release.aar文件放入libs目录
 * {2} build.gradle文件中添加repositories{flatDir{dirs 'libs'}}
 * {3} build.gradle文件中添加dependencies{implementation(name: 'SildeMenulibrary-release', ext: 'aar')}
 */
repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
}

dependencies {
    //compile fileTree(include: ['*.jar'], dir: 'libs')
    //2.0版本 Gradle compile:  jar包/依赖代码,在编译的时候需要依赖,在运行的时候也需要
    //2.0版本 Gradle provided: jar包/依赖代码,仅在编译的时候需要,但是在运行时不需要依赖
    //在3.0版本的Gradle上,provided更改成compileOnly [只在编译时有效,不会参与打包]
    //如果此处将provided改成compile,看到的现象是gradle编译过程相当漫长,一直处于gradle compile构建阶段
    compileOnly files('libs/android.jar')
    //implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'

    //AppCompatActivity,RecyclerView,AppBarLayout
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.google.code.gson:gson:2.4'
    implementation files('libs/core-3.2.0.jar')

    //butterknife绑定view点击事件
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //侧滑菜单aar库
    implementation(name: 'SildeMenulibrary-release', ext: 'aar')

    //Gradle3.0版本 EventBus事件总线
    implementation 'org.greenrobot:eventbus:3.1.1'

    //RxJava/RxAndroid RxBus响应式总线
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.2.1'

    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-support-v4:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-design:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-leanback-v17:2.1.1'

    //okhttp3 logger
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'

    //retrofit2 http
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'

    //Dagger2框架,Java注解(@Inject)
    implementation 'com.google.dagger:dagger:2.14.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.14.1'
    implementation 'org.glassfish:javax.annotation:10.0-b28'

    //glide图片加载框架
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'

    //下拉刷新PtrFrameLayout组件
    implementation 'in.srain.cube:ultra-ptr:1.0.11'

    implementation 'net.danlew:android.joda:2.9.3'

    //RecycleView基本适配器BaseRecycleViewAdapter
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.47'

    //上拉加载,下拉刷新控件SmartRefreshLayout
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'

    //ARouter路由框架
    api 'com.alibaba:arouter-api:1.2.2'
    annotationProcessor'com.alibaba:arouter-compiler:1.1.3'

    //kotlin依赖库[ext.kotlin_version = '1.3.50']
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
